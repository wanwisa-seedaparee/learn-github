# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QUI6xKHfpojsZY77-5_s8CAg8GWYT1u6
"""

def calculate_price_from_pizza_size(size):
    """
    Calculate price based on pizza size

    Parameters:
    size (str): Pizza size ('small', 'medium', or 'large')

    Returns:
    float: Base price of the pizza
    """
    if size.lower() == "small":
        return 100
    elif size.lower() == "medium":
        return 200
    elif size.lower() == "large":
        return 300
    else:
        print("Invalid size. Defaulting to medium.")
        return 200

def calculate_price_from_pizza_type(base_price, pizza_type):
    """
    Calculate price adjustment based on pizza type

    Parameters:
    base_price (float): Base price determined by pizza size
    pizza_type (str): Type of pizza crust ('normal', 'thin', or 'thick')

    Returns:
    float: Adjusted price after applying type modifier
    """
    if pizza_type.lower() == "normal":
        return base_price
    elif pizza_type.lower() == "thin":
        return base_price * 1.05  # Add 5% to base price
    elif pizza_type.lower() == "thick":
        return base_price * 1.10  # Add 10% to base price
    else:
        print("Invalid type. Defaulting to normal.")
        return base_price

def input_topping():
    """
    Get topping input from user

    Returns:
    str: Name of the topping
    """
    topping = input("Enter your topping: ")
    return topping

def calculate_price_from_number_of_toppings(num_toppings):
    """
    Calculate additional price from number of toppings

    Parameters:
    num_toppings (int): Number of toppings

    Returns:
    float: Additional price for toppings
    """
    return num_toppings * 10  # Each topping costs 10 THB

def main():
    """
    Main function to run the pizza ordering system
    """
    order_more_pizza = True

    while order_more_pizza:
        print("Welcome to the Pizza TU156\n")

        # Get pizza size
        size = input("What pizza size would you like (small, medium, large)? ")

        # Get pizza type
        pizza_type = input("What pizza type would you like (normal, thin, thick)? ")

        # Calculate price based on size and type
        base_price = calculate_price_from_pizza_size(size)
        adjusted_price = calculate_price_from_pizza_type(base_price, pizza_type)

        # Handle toppings
        toppings = []
        add_more_toppings = True

        while add_more_toppings:
            print()  # Add an empty line
            topping = input_topping()
            toppings.append(topping)

            print()  # Add an empty line
            more = input("Do you want to add more topping (y/n)? ")
            add_more_toppings = more.lower() == "y"

        # Calculate final price with toppings
        topping_price = calculate_price_from_number_of_toppings(len(toppings))
        final_price = adjusted_price + topping_price

        # Display order summary
        print()  # Add an empty line
        print(f"You ordered {size} {pizza_type} pizza with {len(toppings)} toppings")
        print()  # Add an empty line
        print(f"Total price {final_price} THB")
        print()  # Add an empty line

        # Ask if customer wants to order more pizza
        more_pizza = input("Do you want to order more pizza (y/n)? ")
        order_more_pizza = more_pizza.lower() == "y"

        if order_more_pizza:
            print()  # Add an empty line

    print()  # Add an empty line
    print("Thank you for you order.")

# Run the program
if __name__ == "__main__":
    main()

"""# New Section"""

# TU156 Introduction to Scientific Programming
# Assignment 2: Control Structures
# Coordinate Position Checker

def main():
    """
    Main function to run the coordinate position checker
    This program determines the position of a point (x,y) on a plane
    """
    continue_program = True

    while continue_program:
        print("Please enter coordinate X and Y.")

        # Get X and Y coordinates from user
        try:
            x = float(input("Enter X: "))
            y = float(input("Enter Y: "))

            # Determine position based on coordinates
            if x == 0 and y == 0:
                print("origin")
            elif x == 0:
                print("on y-axis")
            elif y == 0:
                print("on x-axis")
            elif x > 0 and y > 0:
                print("in quadrant 1")
            elif x < 0 and y > 0:
                print("in quadrant 2")
            elif x < 0 and y < 0:
                print("in quadrant 3")
            elif x > 0 and y < 0:
                print("in quadrant 4")
        except ValueError:
            print("Invalid input. Please enter numeric values.")

        # Ask if user wants to continue
        response = input("Do you want to continue? (y/n): ")
        continue_program = response.lower() in ['y', 'yes', 'ใช่']

# Run the program when script is executed
if __name__ == "__main__":
    main()

# Instructions for Colab:
# 1. Click on the play button to run this cell
# 2. Enter X and Y coordinates when prompted
# 3. Type 'y' to continue entering more coordinates or 'n' to exit
# 4. The program will tell you where the point is located on the coordinate plane
